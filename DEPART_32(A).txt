developer@ccfl6-pc56:~$ sqlplus mca92/mca92@172.16.50.33/FISAT

SQL*Plus: Release 23.0.0.0.0 - Production on Wed Mar 19 10:03:54 2025
Version 23.4.0.24.05

Copyright (c) 1982, 2024, Oracle.  All rights reserved.

Last Successful login time: Wed Mar 12 2025 09:42:31 +05:30

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.9.1.0.0

SQL> CREATE TABLE dept_92 (
    dept_id INT PRIMARY KEY,
    dept_name VARCHAR(100) NOT NULL,
    dept_location VARCHAR(100)
);   

Table created.


SQL> CREATE TABLE employee_92 (
    emp_id INT PRIMARY KEY,
    emp_name VARCHAR(100),
    emp_salary DECIMAL(12, 2) CHECK (emp_salary > 20000),
    emp_join_date DATE,  -- Removed the CHECK constraint
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES dept_92(dept_id)
);    

Table created.

SQL> CREATE TABLE support_92 (
    s_id INT PRIMARY KEY,
    emp_id INT,
    dept_id INT,
    status VARCHAR(3) CHECK (status IN ('Yes', 'No')),
    FOREIGN KEY (emp_id) REFERENCES employee_92(emp_id),
    FOREIGN KEY (dept_id) REFERENCES dept_92(dept_id)
);   

Table created.

SQL> DESCRIBE dept_92;
DESCRIBE employee_92;
DESCRIBE support_92; 

Name   Null?    Type
 ----------------------------------------- -------- ----------------------------
 DEPT_ID   NOT NULL NUMBER(38)
 DEPT_NAME   NOT NULL VARCHAR2(100)
 DEPT_LOCATION    VARCHAR2(100)

SQL>  Name   Null?    Type
 ----------------------------------------- -------- ----------------------------
 EMP_ID   NOT NULL NUMBER(38)
 EMP_NAME    VARCHAR2(100)
 EMP_SALARY    NUMBER(12,2)
 EMP_JOIN_DATE    DATE
 DEPT_ID    NUMBER(38)

SQL> Name   Null?    Type
 ----------------------------------------- -------- ----------------------------
 S_ID   NOT NULL NUMBER(38)
 EMP_ID    NUMBER(38)
 DEPT_ID    NUMBER(38)
 STATUS    VARCHAR2(3)

SQL> ALTER TABLE employee_92 ADD emp_email VARCHAR(100);

Table altered.


SQL> DROP TABLE support_92;

Table dropped.

SQL> ALTER TABLE employee_92 MODIFY emp_salary DECIMAL(12, 2);

Table altered.


SQL> INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (101, 'HR', 'New York');

1 row created.

SQL> INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (102, 'Finance', 'Los Angeles');
INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (103, 'IT', 'San Francisco');
INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (104, 'Marketing', 'Chicago');
INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (105, 'Sales', 'Houston');
1 row created.

SQL>
1 row created.

SQL>
1 row created.


SQL> INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (106, 'Sales', 'london');

1 row created.


SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(1, 'John Doe', 60000, TO_DATE('2021-05-15', 'YYYY-MM-DD'), 101);
    
1 row created.


SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(2, 'Jane Smith', 55000, TO_DATE('2020-03-10', 'YYYY-MM-DD'), 101);    

1 row created.

SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(3, 'Alice Johnson', 45000, TO_DATE('2019-07-22', 'YYYY-MM-DD'), 102);    

1 row created.

SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(4, 'Bob Brown', 70000, TO_DATE('2021-01-15', 'YYYY-MM-DD'), 103);    

1 row created.

SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(5, 'Charlie Davis', 30000, TO_DATE('2022-11-30', 'YYYY-MM-DD'), 104);    

1 row created.

SQL> UPDATE employee_92 SET emp_salary = emp_salary * 1.10 WHERE emp_id = 1;

1 row updated.

SQL> DELETE FROM employee_92 WHERE emp_id = 1;

1 row deleted.

SQL> UPDATE employee_92 SET emp_salary = emp_salary * 1.10 WHERE dept_id = 101 AND emp_salary < 50000;

0 rows updated.

SQL> UPDATE employee_92 SET emp_salary = emp_salary * 1.10 WHERE dept_id = 102 AND emp_salary < 50000;

1 row updated.

SQL> SELECT emp_id, emp_name, emp_salary FROM employee_92;

    EMP_ID       EMP_NAME            EMP_SALARY
--------------------------------------------------------------------------------
      2          Jane Smith          55000
      3          Alice Johnson       49500
      4          Bob Brown           70000
      5          Charlie Davis       30000


SQL> SELECT emp_name, emp_salary, emp_join_date FROM employee_92 WHERE emp_salary > 50000;

EMP_NAME         EMP_SALARY           EMP_JOIN_ 
--------------------------------------------------------------------------------
Jane Smith       55000                10-MAR-20
Bob Brown        70000                15-JAN-21


SQL> SELECT * FROM employee_92 ORDER BY emp_salary DESC;

    EMP_ID     EMP_NAME       EMP_SALARY       EMP_JOIN_       DEPT_ID       EMP_EMAIL
--------------------------------------------------------------------------------
    4          Bob Brown      70000            15-JAN-21       103
    2          Jane Smith     55000            10-MAR-20       101
    3          Alice Johnson  49500            22-JUL-19       102
    5          Charlie Davis  30000            30-NOV-22       104


SQL> SELECT emp_name, emp_salary
FROM employee_92
WHERE emp_join_date > TO_DATE('2020-01-01', 'YYYY-MM-DD');    

EMP_NAME       EMP_SALARY
--------------------------------------------------------------------------------
Jane Smith     55000
Bob Brown      70000
Charlie Davis  30000


SQL> SELECT * FROM employee_92 WHERE emp_name LIKE 'J%';

    EMP_ID      EMP_NAME      EMP_SALARY     EMP_JOIN_     DEPT_ID     EMP_EMAIL
--------------------------------------------------------------------------------
    2           Jane Smith    55000          10-MAR-20     101



SQL> SELECT emp_name, emp_salary FROM employee_92 WHERE emp_salary BETWEEN 40000 AND 60000;

EMP_NAME       EMP_SALARY
--------------------------------------------------------------------------------
Jane Smith     55000
Alice Johnson  49500


SQL> SELECT dept_id, SUM(emp_salary) AS total_salary
FROM employee_92
GROUP BY dept_id;    

   DEPT_ID TOTAL_SALARY
---------- ------------
       104  30000
       101  55000
       103  70000
       102  49500

SQL> SELECT dept_id, AVG(emp_salary) AS average_salary
FROM employee_92
GROUP BY dept_id
HAVING AVG(emp_salary) > 60000;    

   DEPT_ID    AVERAGE_SALARY
---------- --------------
   103        70000

SQL>
SELECT dept_id, COUNT(*) AS employee_count
FROM employee_92
WHERE emp_salary > 50000
GROUP BY dept_id;
SQL>    
   DEPT_ID    EMPLOYEE_COUNT
---------- --------------
       101    1
       103    1


SQL> commit;

Commit complete.

SQL> SELECT dept_id, COUNT(*) AS employee_count
FROM employee_92
GROUP BY dept_id
HAVING COUNT(*) > 3;    

   DEPT_ID EMPLOYEE_COUNT
---------- --------------
       101		4

SQL> SELECT EMP_NAME
FROM employee_92 e
WHERE EMP_SALARY > (
    SELECT AVG(EMP_SALARY)
    FROM employee_92
    WHERE DEPT_ID = e.DEPT_ID
);    

EMP_NAME
--------------------------------------------------------------------------------
Emily Clark
Emma watson

SQL> INSERT INTO dept_92 (dept_id, dept_name, dept_location) VALUES (107, 'HR', 'Ernakulam');

1 row created.

SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(9, 'Elsamma Joshy', 62000, TO_DATE('2023-02-25', 'YYYY-MM-DD'), 107);     

1 row created.

SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(10, 'Mariya Joy', 70000, TO_DATE('2023-02-26', 'YYYY-MM-DD'), 107); 
    
1 row created.

SQL> SELECT e.EMP_NAME, e.emp_salary
FROM employee_92 e
JOIN dept_92 d ON e.dept_id = d.dept_id
WHERE d.dept_location = 'Ernakulam';    

EMP_NAME        EMP_SALARY
---------------------------
Elsamma Joshy   62000
Mariya Joy      70000


SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(11, 'John Abhraham', 70000, TO_DATE('2023-02-26', 'YYYY-MM-DD'), 102);    

1 row created.

SQL> INSERT INTO employee_92 (emp_id, emp_name, emp_salary, emp_join_date, dept_id) VALUES
(12, 'Leo Manual', 90000, TO_DATE('2023-02-28', 'YYYY-MM-DD'), 102);   

1 row created.

SQL> SELECT MAX(EMP_SALARY) AS highest_salary
FROM employee_92
WHERE DEPT_ID = 102;   

HIGHEST_SALARY
--------------
	 90000

SQL> SELECT EMP_NAME, EMP_SALARY
FROM employee_92;    

EMP_NAME          EMP_SALARY
--------------------------------
David Wilson      60000
Emily Clark       62000
Emma watson       64000
Elsamma Joshy     62000
Mariya Joy        70000
John Abhraham     70000
Leo Manual        90000
Jane Smith        55000
Alice Johnson     49500
Bob Brown         70000
Charlie Davis     30000


11 rows selected.

SQL> SELECT EMP_NAME, EMP_SALARY
FROM employee_92
WHERE EMP_SALARY > 90000;    

no rows selected

SQL> SELECT d.dept_name
FROM dept_92 d
JOIN employee_92 e ON d.dept_id = e.dept_id
GROUP BY d.dept_name
ORDER BY SUM(e.emp_salary) DESC
FETCH FIRST 1 ROW ONLY;    

DEPT_NAME
------------------------------------------
HR

SQL> SELECT e.EMP_ID, e.EMP_NAME
FROM employee_92 e
WHERE e.DEPT_ID IN (
    SELECT DEPT_ID
    FROM employee_92
    GROUP BY DEPT_ID
    HAVING COUNT(*) < 10
);   

    EMP_ID              EMP_NAME
--------------------------------------------------------------------------------
	 9                    Elsamma Joshy
	10                    Mariya Joy
   5                    Charlie Davis
	 6                    David Wilson
   7                    Emily Clark
   8                    Emma watson
	 2                    Jane Smith
   4                    Bob Brown
   11                   John Abhraham
	 12                   Leo Manual
   3                    Alice Johnson

11 rows selected.

SQL> CREATE VIEW high_salary_employees AS
SELECT EMP_NAME, EMP_SALARY
FROM employee_92
WHERE EMP_SALARY > 70000;   

View created.

SQL> SELECT *                                                           
FROM high_salary_employees;   

EMP_NAME            EMP_SALARY
-------------------------------
Leo Manual          90000

SQL> CREATE VIEW EmployeeDepartmentSalary AS
SELECT 
    e.emp_id,
    e.emp_name,
    e.emp_salary,
    d.dept_name
FROM 
    employee_92 e
JOIN 
    dept_92 d ON e.dept_id = d.dept_id
WHERE 
    e.emp_salary >= 50000;  2    3    4    5    6    7    8    9   10   11   12  

View created.

SQL> SELECT * FROM EmployeeDepartmentSalary;

    EMP_ID   EMP_NAME         EMP_SALARY          DEPT_NAME
--------------------------------------------------------------------------------
     6       David Wilson     60000               HR
     7       Emily Clark      62000               HR
     8       Emma watson      64000               HR
     9       Elsamma Joshy    62000               HR
     10      Mariya Joy       70000               HR
     11      John Abhraham    70000               Finance
     12      Leo Manual       90000               Finance
     2       Jane Smith       55000               HR
     4       Bob Brown        70000               IT


9 rows selected.

SQL> DROP VIEW high_salary_employees;

View dropped.
